@model Library.ViewModels.AccountViewModel

@{
    ViewBag.Title = "Edit User";
}
<section>
    <article>
        <h2>Edit User: @Model.UserName</h2>
        @using (Html.BeginForm("EditUser", "Admin", FormMethod.Post, new { @class = "formLeft" }))
        {
            <div class="formGroup">
                @Html.LabelFor(x => x.ID)
                <div class="formRows">
                    @Html.EditorFor(x => x.ID, new { htmlAttributes = new { @readonly = "readonly", @class = "inputDisabled" } })
                    @Html.ValidationMessageFor(x => x.ID, "")
                </div>
            </div>

            <div class="formGroup">
                @Html.LabelFor(x => x.UserName)
                <div class="formRows">
                    @Html.EditorFor(x => x.UserName)
                    @Html.ValidationMessageFor(x => x.UserName, "")
                </div>
            </div>

            <div class="formGroup">
                @Html.LabelFor(x => x.Email)
                <div class="formRows">
                    @Html.EditorFor(x => x.Email)
                    @Html.ValidationMessageFor(x => x.Email, "")
                </div>
            </div>

            @Html.ValidationSummary(true)
            <input class="button inline" type="submit" value="Update" />
            <input class="button inline" type="button" value="Cancel" onclick="location.href='@Url.Action("Cancel", "Admin")'" />
        }

    <div class="card">
        <div class="cardHeader">
            Roles
        </div>
        <div class="cardBody">
            @if (Model.Roles.Any())
            {
                <ul class="userList">
                    @foreach (var role in Model.Roles)
                    {
                        <li>@role</li>
                    }
                </ul>
            }
            else
            {
                <span>None at the moment</span>
            }
            
        </div>
        <div class="cardSetting">
            @Html.ActionLink("Manage roles", "ManageRole", "Roles", new { roleID = Model.ID }, new { @class = "button inCard" })
        </div>
    </div>
    </article>
</section>